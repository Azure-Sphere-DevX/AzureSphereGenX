---
genx:
  project_path: "../GenX_Generated"

components:
  - name: PressureAlertLevel
    description: Azure IoT device twin cloud to device
    class: DeviceTwinPnP
    enabled: true
    properties:
      type: float
      lambda: |
        // Device twin pressure lambda
            if (!IN_RANGE(*(float*)value, 800, 1100))
            {
                dx_deviceTwinAckDesiredState(deviceTwinBinding, deviceTwinBinding->propertyValue, DX_DEVICE_TWIN_ERROR);
            }

  - name: FactoryTargetTemperature
    description: Avnet IoT Connect device twin cloud to device
    class: DeviceTwinAvnet
    enabled: false
    properties:
      type: int
      lambda: |
        if (!IN_RANGE(*(int*)value, 0, 120))
            {
                dx_deviceTwinAckDesiredState(deviceTwinBinding, deviceTwinBinding->propertyValue, DX_DEVICE_TWIN_ERROR);
            }

  - name: OfficeTargetTemperature
    class: DeviceTwinPnP
    enabled: false
    properties:
      type: int
      lambda: |
        if (!IN_RANGE(*(int*)value, 0, 80))
            {
                dx_deviceTwinAckDesiredState(deviceTwinBinding, deviceTwinBinding->propertyValue, DX_DEVICE_TWIN_ERROR);
            }

  - name: Light
    class: GpioOutput
    enabled: true
    properties:
      pin: NETWORK_CONNECTED_LED
      initialState: GPIO_Value_Low
      invertPin: false

  - name: OfficeLightOn
    class: DirectMethodWithContext
    enabled: true
    properties:
      context:
        type: DX_GPIO_BINDING
        name: Light
      lambda: dx_gpioOn(context);

  - name: OfficeLightOff
    class: DirectMethodWithContext
    enabled: true
    properties:
      context:
        type: DX_GPIO_BINDING
        name: Light
      lambda: dx_gpioOff(context);

  - name: ButtonA
    class: GpioInput
    enabled: false
    properties:
      pin: BUTTON_A
      detect: DX_GPIO_DETECT_LOW
      period: "{ 0, 200 * ONE_MS }"

  - name: LightControl
    class: DirectMethod
    enabled: false
    properties:
      lambda: |
        // Direct method JSON payload example {{"State":true}}:
            JSON_Object *jsonObject = json_value_get_object(json);
            if (jsonObject == NULL || !json_object_has_value_of_type(jsonObject, state_property, JSONBoolean)) {{
                return DX_METHOD_FAILED;
            }}
            bool state = (int)json_object_get_boolean(jsonObject, state_property);

  - name: FanOff
    class: DirectMethod
    enabled: false

  - name: MeasureTemperature
    class: TimerPeriodic
    enabled: false
    properties:
      period: "{ 5, 0 }"
      type: periodic

  - name: Watchdog
    description: Watchdog on a 30 second refresh cadence
    enabled: false
    class: Watchdog

  - name: DeferredUpdate
    description: Deferred update framework and a device twin to report status
    warning:
      "The app_manifest.json file is updated with the following capabilities:
      SystemEventNotifications and SoftwareUpdateDeferral"
    enabled: false
    class: DeferredUpdate

azure_iot:
  - name: glovebox-demo
    enabled: false
    manifest:
      CmdArgs:
        - "--ScopeID"
        - REPLACE_WITH_YOUR_ID_SCOPE
      Capabilities:
        - DeviceAuthentication: REPLACE_WITH_YOUR_TENANT_ID
        - AllowedConnections:
            - REPLACE_WITH_REQUIRED_ENDPOINTS
        - SystemEventNotifications: false
        - SoftwareUpdateDeferral: false
        - PowerControls: []
